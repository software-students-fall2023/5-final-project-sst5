# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Deploy to Digital Ocean

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    rules:
      - if: $CI_COMMIT_TAG
        when: never
      - if: $CI_COMMIT_BRANCH == 'master'

    steps:
      - uses: actions/checkout@v3

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and Push Web-App Docker Image
      #   run: |
      #     docker build -f web_app/Dockerfile -t vitarose/web_app:latest ./web_app
      #     docker push vitarose/web_app:latest

      # - name: Build and Push MongoDB Docker Image
      #   run: |
      #     docker build -f mongodb/Dockerfile -t vitarose/mongodb:latest ./mongodb
      #     docker push vitarose/mongodb:latest

      # - name: Deploy to DigitalOcean
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
      #     username: ${{ secrets.DIGITALOCEAN_DROPLET_USERNAME }}
      #     key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
      #     script: |
      #       if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
      #         cd 4-containerized-app-exercise-sst4/
      #         docker container prune -f
      #         docker image prune -f
      #         docker volume prune -f
      #         docker-compose pull
      #         docker-compose down
      #         docker-compose up -d
      #       else
      #         echo "Won't deploy if not on main."
      #       fi
